services:
  lifetrack-db:
    image: postgres:17
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - lifetrack-pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: always
    networks:
      - lifetrack-network

  lifetrack-api:
    image: zeroicey/lifetrack-api:v0.0.1
    ports:
      - "${PORT:-5000}:5000"
    environment:
      - PORT=${PORT:-5000}
      - DB_HOST=lifetrack-db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - APPMODE=prod
      - STORAGE_PROVIDER=${STORAGE_PROVIDER}
      - STORAGE_ENDPOINT=${STORAGE_ENDPOINT}
      - STORAGE_ACCESS_KEY=${STORAGE_ACCESS_KEY}
      - STORAGE_SECRET_KEY=${STORAGE_SECRET_KEY}
      - STORAGE_BUCKET_NAME=${STORAGE_BUCKET_NAME}
      - STORAGE_REGION=${STORAGE_REGION}
      - STORAGE_USE_SSL=${STORAGE_USE_SSL}
      - STORAGE_PRESIGNED_EXPIRY=${STORAGE_PRESIGNED_EXPIRY}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_FROM=${MAIL_FROM}
      - MAIL_TO=${MAIL_TO}
    depends_on:
      lifetrack-db:
        condition: service_healthy
    restart: always
    networks:
      - lifetrack-network
    # 生产环境资源限制
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

volumes:
  lifetrack-pgdata:

networks:
  lifetrack-network:
    driver: bridge